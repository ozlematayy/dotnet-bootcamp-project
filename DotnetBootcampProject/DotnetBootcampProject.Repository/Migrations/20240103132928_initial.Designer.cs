// <auto-generated />
using System;
using DotnetBootcampProject.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetBootcampProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240103132928_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Fyodor Dostoyevski",
                            BookName = "Suç ve Ceza",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(195),
                            Genre = "Psikolojik Roman",
                            PublisherId = 3
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Ahmet Hamdi Tanpınar",
                            BookName = "Saatleri Ayarlama Enstitüsü",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(204),
                            Genre = "Edebi Kurgu",
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = " Stephen King",
                            BookName = "Kara Kule: Silahşör",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(205),
                            Genre = "Bilim Kurgu",
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Sabahattin Ali",
                            BookName = "Kürk Mantolu Madonna",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(206),
                            Genre = "Edebi Kurgu romanı",
                            PublisherId = 4
                        });
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.PublicationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Edition")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("PublicationInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(369),
                            Edition = 1,
                            PublicationDate = new DateTime(1866, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(371),
                            Edition = 1,
                            PublicationDate = new DateTime(1954, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(371),
                            Edition = 1,
                            PublicationDate = new DateTime(1982, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(372),
                            Edition = 1,
                            PublicationDate = new DateTime(1981, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BookId = 4,
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(373),
                            Edition = 2,
                            PublicationDate = new DateTime(2001, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "İstanbul",
                            ContactEmail = "iletisim@ykykultur.com",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(499),
                            PublisherName = "Yapı Kredi Yayınları"
                        },
                        new
                        {
                            Id = 2,
                            City = "İstanbul",
                            ContactEmail = "iletisim@pegasus.com",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(500),
                            PublisherName = "Pegasus Yayınları"
                        },
                        new
                        {
                            Id = 3,
                            City = "Ankara",
                            ContactEmail = "iletisim@iskultur.com",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(501),
                            PublisherName = "İş Bankası Kültür Yayınları"
                        },
                        new
                        {
                            Id = 4,
                            City = "İstanbul",
                            ContactEmail = "info@everest.com",
                            CreatedDate = new DateTime(2024, 1, 3, 16, 29, 28, 88, DateTimeKind.Local).AddTicks(502),
                            PublisherName = "Everest Yayınları"
                        });
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.Book", b =>
                {
                    b.HasOne("DotnetBootcampProject.Core.Models.Publisher", "Publisher")
                        .WithMany("Book")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.PublicationInfo", b =>
                {
                    b.HasOne("DotnetBootcampProject.Core.Models.Book", "Book")
                        .WithMany("PublicationInfo")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.Book", b =>
                {
                    b.Navigation("PublicationInfo");
                });

            modelBuilder.Entity("DotnetBootcampProject.Core.Models.Publisher", b =>
                {
                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
